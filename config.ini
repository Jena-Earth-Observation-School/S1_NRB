########################################################################################################################

# This is an example config file. You can create a copy, adjust the parameters and save it in your
# working directory. Once you have installed this package, you can start a processing workflow via the command line:
# `s1_nrb -c /path/to/your/config.ini`

########################################################################################################################

[GENERAL]

# Options: all | nrb | snap
# You can use 'nrb' or 'snap' to execute only one part of the processing chain.
mode = all

# Only one of the following parameters is required.
# aoi_tiles can be used to define the area of interest via MGRS tile IDs.
# IDs must be provided comma-separated, e.g.: 32TNS, 32TMT, 32TMS
# aoi_geometry on the other hand defines the area of interest via a full path to a vector file supported by
# `spatialist.vector.Vector`. This option will automatically search for overlapping MGRS tiles and use these for processing.
aoi_tiles = 28RBS
aoi_geometry = None

# Allowed formats: %Y-%m-%d | %Y-%m-%dT%H:%M:%S
mindate = 2021-10-19
maxdate = 2021-10-21

# Options: IW | EW | SM
acq_mode = IW

# work_dir and scene_dir must be full paths to existing directories
# All other parameters ending in '_dir' can either be full paths to existing directories of choice OR directory names
# that will automatically be created as subdirectories of the directory specified with 'work_dir'.
# All parameters ending in '_file' can either be full paths to the respective file OR file names, which are assumed to
# be located in the directory specified with the parameter 'work_dir'. The 'db_file' is an exception, as it will be
# automatically generated by pyroSAR if it doesn't exist already.
work_dir = /example/project/directory
scene_dir = /example/scene/directory
out_dir = proc_out
tmp_dir = proc_in
dem_dir = DEM
wbm_dir = WBM
db_file = scenes.db
kml_file = S2A_OPER_GIP_TILPAR_MPC__20151209T095117_V20150622T000000_21000101T000000_B00.kml

dem_type = Copernicus 30m Global DEM II
dem_threads = 6